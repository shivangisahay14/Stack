Using nearest greater to left Approach:

Using stack of pair:

        vector<int> v;
        stack<pair<long ,long >> s;
        
        
        for(long i=0;i<n;i++){
            
            while(s.size()>0 and s.top().first<=price[i]){
                s.pop();
            }
            if(s.size()>0 and s.top().first>price[i]){
                v.push_back(s.top().second);
            }
            else{
                v.push_back(-1);
            }
            s.push({price[i],i});
            
        }
        for(long j=0;j<v.size();j++){
            v[j]=j-v[j];
        }
        
        return v;
    }
    
    Using only stack:
    
    vector <int> calculateSpan(int price[], int n)
    {
        vector<int> v;
        stack<long long> s;
        
        for(int j=0;j<n;j++){
            
            while(s.size()>0 and price[s.top()]<=price[j]){
                s.pop();
            }
            if(s.size()>0 and price[s.top()]>price[j]){
                v.push_back(j-s.top());
            }
            else{
                v.push_back(j+1);
            }
            s.push(j);
            
        }
        
        return v; 
        }
